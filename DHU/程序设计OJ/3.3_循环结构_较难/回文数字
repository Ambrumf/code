问题描述 :

观察数字：12321，123321 都有一个共同的特征，无论从左到右读还是从右向左读，都是相同的。这样的数字叫做：回文数字。

　　本题要求你找到一些5位或6位的十进制回文数字，并满足如下要求：
　　该数字的各个数位之和等于输入的整数。

输入说明 :

一个正整数 n (10<n<100), 表示要求满足的数位和。

输出说明 :

　　若干行，每行包含一个满足要求的5位或6位整数。
　　数字按从小到大的顺序排列。
　　如果没有满足条件的，输出：-1



比如：

输入

60

输出

-1



输入范例 :

44
输出范例 :

99899
499994
589985
598895
679976
688886
697796
769967
778877
787787
796697
859958
868868
877778
886688
895598
949949
958859
967769
976679
985589
994499

#include <iostream>
#include <iomanip>

using namespace std;

int main()
{
    int prin,j,a,b,c,d,e,f;
    int sum=0;
    int flag=0;
    cin>>prin;
    for(int i=10000;i<1000000;i++)
    {
        j=i;
        while(j!=0)
        {
            sum+=j%10;
            j=j/10;
        }
        if(sum!=prin)
        {
            sum=0;
            continue;
        }
        sum=0;
        if(i<100000)
        {
            a=i%10;
            b=i/10%10;
            c=i/100%10;
            d=i/1000%10;
            e=i/10000;
            if(a==e && b==d) cout<<i<<endl;
            flag=1;
        }
        else
        {
            a=i%10;
            b=i/10%10;
            c=i/100%10;
            d=i/1000%10;
            e=i/10000%10;
            f=i/100000;
            if(a==f && b==e &&c==d) cout<<i<<endl;
            flag=1;
        }

    }
        if(flag==0) cout<<-1;
}
