问题描述 :

输入一个不多于4位的正整数，要求按逆序打印出各个位上的数字，例如原数为23，应输出32；如原数为8000，应输出0008；如原数为1，则输出1。应测试以下情况：输入的数为1位、2位、3位、4位正整数；此外，还应测试以下异常情况：输入负数或0，或输入的数超过4位。

输入说明 :

输入一个整数，可能为0，也可能为负数。

输出说明 :

输入1到4位的正整数时，输出该数的逆序，如果是其它整数，则输出“error!”。输出时，行首与行尾均无空格。

输入范例 :

8000
输出范例 :

0008
#include <iostream>
#include <iomanip>

using namespace std;

int main()
{
    int num,a,b,c,d;
    cin>>num;
    if(num<=0||num>9999) cout<<"error!";
    else if (num>=1000)
    {
        a=num/1000;
        b=num%1000/100;
        c=num%100/10;
        d=num%10;
        num=1000*d+100*c+10*b+a;
        cout<<setw(4)<<setfill('0')<<num;
    }
    else if(num>=100)
    {
        a=num/100;
        b=num%100/10;
        c=num%10;
        num=100*c+10*b+a;
        cout<<setw(3)<<setfill('0')<<num;
    }
    else if (num>=10)
    {
        a=num/10;
        b=num%10;
        num=10*b+a;
        cout<<setw(2)<<setfill('0')<<num;
    }
    else cout<<num;
    return 0;
}
