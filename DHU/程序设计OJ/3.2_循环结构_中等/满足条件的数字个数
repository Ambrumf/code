问题描述 :

输入一个整数n (1≤n≤10000)，求1到n中（包含1和n）能被3整除、且至少有一位数字是5的所有整数的个数。例如，252、54、525、555能被3整除，且至少有一位数字是5。

输入说明 :

你的程序需要从标准输入设备（通常为键盘）中读入多组测试数据。每组输入数据占一行，其中包含：一个整数n（1≤n≤10000）；在行首和行尾没有多余的空格。

输出说明 :

对每组测试数据，你的程序需要向标准输出文件（通常为启动该程序的终端）依次输出一组对应的答案。每个答案占一行，其中每行只包含一个整数，即1到n中（包含1和n）能被3整除、且至少有一位数字是5的所有整数的个数。在行首和行尾不要输出多余的空格。在所有数据前后，以及两组数据之间不要输出多余的空行。

输入范例 :

100
1004

输出范例 :

6
91

#include <iostream>
#include <iomanip>
using namespace std;
int main()
{
    int a,b,c,d,e,n;
    int k=0;
    a=0,b=0,c=0,d=0,e=0;
    while(cin>>n)
    {

        for(int num=1; num<=n; num++)
        {
            if(num<10) a=num;
            if(num<100 && num >9) a=num % 10,b=num / 10;
            if(num<1000 && num >99) a=num % 10,b=(num / 10) % 10,c=num/100;
            if(num<10000 && num >999) a=num % 10,b=(num / 10) % 10,c=(num / 100) % 10,d=num/1000;
            if(num>9999) a=num % 10,b=(num / 10) % 10,c=(num / 100) % 10,d=(num / 1000) % 10,e=num / 10000;
            if(num%3 == 0 && (a==5 || b==5 || c==5 || d==5 || e==5)) k++;

        }
        cout<<k<<endl;
        k=0;
    }
    return 0;

}
