问题描述 :

作为需要养家糊口的人，最盼望的日子就是每月发工资的日子，呵呵

但是对于财务处的工作人员来说，这一天则是很忙碌的一天，财务处的小胡最近就在考虑一个问题：如果每个员工的工资额都知道，最少需要准备多少张人民币，才能在给每位员工发工资的时候都不用员工找零呢？

这里假设员工的工资都是正整数，单位元，人民币一共有100元、50元、20元、10元、5元、2元和1元七种。



输入说明 :

首先输入一个T，表示包含T组测试数据，

每组测试数据的第一行是一个整数n（n<100），表示员工的人数，

第二行是n个员工的工资。



输出说明 :

对于每组测试数据输出一个整数x，表示至少需要准备的人民币张数。

每个输出占一行，行首与行尾无多余空格，前后也无多余空行。

输入范例 :

3
1
299
2
299 197
5
123 4567 89 10 12345
输出范例 :

8
14
186

#include <bits/stdc++.h>
using namespace std;
int getsum(int x)
{
    int sum=0;
    if(x>=100){sum+=x/100;x%=100;}
    if(x>=50){sum+=x/50;x%=50;}
    if(x>=20){sum+=x/20;x%=20;}
    if(x>=10){sum+=x/10;x%=10;}
    if(x>=5){sum+=x/5;x%=5;}
    if(x>=2){sum+=x/2;x%=2;}
    sum+=x;
    return sum;
}
int main()
{
    int T,n,x,sum;
    cin>>T;
    while(T)
    {
       sum=0;
       cin>>n;
       for (int i=0;i<n;i++){cin>>x;sum+=getsum(x);}
       cout<<sum<<endl;
       T--;
    }
    return 0;
}
