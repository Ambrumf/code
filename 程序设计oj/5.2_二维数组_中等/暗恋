问题描述 :

　　同在一个高中，他却不敢去找她，虽然在别人看来，那是再简单不过的事。暗恋，是他唯一能做的事。他只能在每天课间操的时候，望望她的位置，看看她倾心的动作，就够了。操场上的彩砖啊，你们的位置，就是他们能够站立的地方，他俩的关系就像砖与砖之间一样固定，无法动摇。还记得当初铺砖的工人，将整个操场按正方形铺砖（整个操场可视为R行C列的矩阵，矩阵的每个元素为一块正方形砖块），正方形砖块有两种，一种为蓝色，另一种为红色。我们定义他和她之间的“爱情指标”为最大纯色正方形的面积，请你写一个程序求出“爱情指标”。

输入说明 :

　　第一行两个正整数R和C，R和C都不超过200。
　　接下来R行C列描述整个操场，红色砖块用1来表示，蓝色砖块用0来表示。

输出说明 :

　　一个数，表示他和她之间的“爱情指标”。

输入范例 :

5 8
0 0 0 1 1 1 0 1
1 1 0 1 1 1 1 1
0 1 1 1 1 1 0 1
1 0 1 1 1 1 1 0
1 1 1 0 1 1 0 1
输出范例 :

9
#include <iostream>
#include <string>
#include <vector>
#include <queue>
#include <algorithm>
#include <set>
using namespace std;
const int MAX = 401;
int check(int a, int b, int ans,int p[][401])
{
    int temp = p[a][b];
    for (int i = 0; i < ans; i++)
        for (int j = 0; j < ans; j++)
        {
            if (p[a + i][b + j] != temp)
                return 0;
        }
    return 1;
}
int main()
{
    int map[MAX][MAX];
    int a, b, mmax, ans = 0;
    cin >> a >> b;
    mmax = a > b ? b : a;
    for (int i = 0; i < a; i++)
        for (int j = 0; j < b; j++)
            cin >> map[i][j];
    if (a > b)
        mmax = a;
    else
        mmax = b;
    for (int i = 0; i < a; i++)
        for (int j = 0; j < b; j++)
            for (int k = ans + 1; k <= mmax; k++)
            {
                if (i + k <= mmax && j + k <= mmax)
                    if (check(i, j, k,map))
                        ans = k;
                    else
                        break;
            }
    cout << ans*ans;
    return 0;
}