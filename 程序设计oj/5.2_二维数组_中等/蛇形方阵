

问题描述 :

输出一个如下的n阶方阵。例如，若读入11，则输出：

   1   2   3   4   5   6   7   8   9  10  11
  22  21  20  19  18  17  16  15  14  13  12
···
 111 112 113 114 115 116 117 118 119 120 121


输入说明 :

输入一个正整数n（n<20)，表示需要输出n阶方阵。

输出说明 :

共输出n行n列，每个整数占4位，不足4位则左边补空格。

每行的最后无空格。

无多余空行。

输入范例 :

11
输出范例 :

   1   2   3   4   5   6   7   8   9  10  11
  22  21  20  19  18  17  16  15  14  13  12
  23  24  25  26  27  28  29  30  31  32  33
  44  43  42  41  40  39  38  37  36  35  34
  45  46  47  48  49  50  51  52  53  54  55
  66  65  64  63  62  61  60  59  58  57  56
  67  68  69  70  71  72  73  74  75  76  77
  88  87  86  85  84  83  82  81  80  79  78
  89  90  91  92  93  94  95  96  97  98  99
 110 109 108 107 106 105 104 103 102 101 100
 111 112 113 114 115 116 117 118 119 120 121

#include <bits/stdc++.h>
using namespace std;
int main()
{
    int n,k=0,t;
    cin>>n;
    t=n*n;
    while(t)
    {
        t/=10;
        k++;
    }
    int s=0,line=1;
    for(int T=0;T<n;T++)
    {
        if(line%2==1){
            for(int i=1;i<n+1;i++)
            {
                cout<<setw(4)<<(line-1)*n+i;
            }
            cout<<endl;}
        else {for(int i=n;i>0;i--)
            {
                cout<<setw(4)<<(line-1)*n+i;
            }
            cout<<endl;}
        line++;
    }
    return 0;
}