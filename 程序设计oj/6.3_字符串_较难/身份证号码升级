问题描述 :

　　从1999年10月1日开始，公民身份证号码由15位数字增至18位。(18位身份证号码简介)。升级方法为：
　　1、把15位身份证号码中的年份由2位(7,8位)改为四位。
　　2、最后添加一位验证码。验证码的计算方案：
　　将前 17 位分别乘以对应系数 (7 9 10 5 8 4 2 1 6 3 7 9 10 5 8 4 2) 并相加，然后除以 11 取余数，0-10 分别对应 1 0 x 9 8 7 6 5 4 3 2。
　　请编写一个程序，用户输入15位身份证号码，程序生成18位身份证号码。假设所有要升级的身份证的四位年份都是19××年

输入说明 :

　　一个15位的数字串，作为身份证号码

　　不用判断输入的15位字符串是否合理

输出说明 :

　　一个18位的字符串，作为升级后的身份证号码

输入范例 :

110105491231002

输出范例 :

11010519491231002x
#include <bits/stdc++.h>
using namespace std;
int main()
{
    string a;
    map<int,string> m;
    m.insert(make_pair(0,"1"));
    m.insert(make_pair(1,"0"));
    m.insert(make_pair(2,"x"));
    m.insert(make_pair(3,"9"));
    m.insert(make_pair(4,"8"));
    m.insert(make_pair(5,"7"));
    m.insert(make_pair(6,"6"));
    m.insert(make_pair(7,"5"));
    m.insert(make_pair(8,"4"));
    m.insert(make_pair(9,"3"));
    m.insert(make_pair(10,"2"));
    cin>>a;
    a.insert(6,1,'9');
    a.insert(6,1,'1');
    int x;
    x=(a[0]-48)*7+(a[1]-48)*9+(a[2]-48)*10+(a[3]-48)*5+(a[4]-48)*8+(a[5]-48)*4+(a[6]-48)*2+(a[7]-48)*1+(a[8]-48)*6+(a[9]-48)*3+(a[10]-48)*7+(a[11]-48)*9+(a[12]-48)*10+(a[13]-48)*5+(a[14]-48)*8+(a[15]-48)*4+(a[16]-48)*2;
    x=x%11;
    a+=m[x];
    cout<<a;
    return 0;
}
