问题描述 :

有时候程序员有很奇怪的方法来隐藏他们的口令。

Billy"Hacker"Geits会选择一个字符串S（由L个小写字母组成，5<=L<=100,000），然后他把S顺时针绕成一个圈。

如字符串cbadfa，绕成一个圈后，我们认为字符串首尾相连。

每次取其中一个字母作为起始字母，并顺时针依次取字母而组成一个字符串。这样将得到一些字符串。

比如字符串cbadfa，按照以上规则取出的字符串有：

cbadfa  badfac  adfacb   dfacba  facbad  acbadf

我们找到最小的那个字符串，可知为acbadf，也可知道它的第一个字符'a'在原字符串cbadfa中为第6个字符（位置从1开始），

将得到的结果6减1得到5，这就是我们需要的口令。



再比如字符串alabala，绕成一个圈后，每次取其中一个字母作为起始字母，并顺时针依次取字母而组成一个字符串。这样将得到一些字符串：

alabala  labalaa  abalaal  balaala  alaalab  laalaba  aalabal

我们找到最小的那个字符串，可知为aalabal，它的第一个字母'a'在原字符串中位置为7，7-1=6，则6为口令。



注：如果按照规则有两个字符串都是最小的，则取前面那一个。

输入说明 :

第一行：一个数L

第二行及之后：字符串S。

注意：字符串S可跨多行，但其中的'\n'不算成S中的字符

输出说明 :

一行，为得到的口令。

无多余空格或空行。

输入范例 :

6
cbadfa
输出范例 :

5

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
struct str{
    string s;
    int num;
    str(string a,int b){s=a;num=b;}
};
bool cmp(str a,str b)
{
    if(a.s!=b.s)return a.s <b.s;
    else return a.num<b.num;
}
int main()
{
    int n;
    cin>>n;
    cin.get();
    string t;
    while(t.size()!=n)
    {
        string r;
        getline(cin,r);
        t+=r;
    }
    vector<str> v;
    for(int i=0;i<t.size();i++)
    {
        str tmp(t,i);
        v.push_back(tmp);
        if(i!=t.size()-1){
            char c=t.front();
            string r(1,c);
            t+=r;
            t.erase(t.begin());
        }
    }
    sort(v.begin(),v.end(),cmp);
    cout<<v.begin()->num;
    return 0;
}
